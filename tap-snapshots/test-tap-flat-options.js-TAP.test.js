/* IMPORTANT
 * This snapshot file is auto-generated, but designed for humans.
 * It should be checked into source control and tracked carefully.
 * Re-generate by setting TAP_SNAPSHOT=1 and running tests.
 * Make sure to inspect the output below.  Do not ignore changes!
 */
'use strict'
exports[`test/tap/flat-options.js TAP basic > flat options 1`] = `
{
  log: {},
  npmSession: '12345',
  dmode: 511,
  fmode: 438,
  umask: 18,
  hashAlgorithm: 'sha1',
  color: true,
  includeDeprecated: false,
  projectScope: '@npmcli',
  npmVersion: '7.6.5',
  nodeVersion: '1.2.3',
  npmCommand: 'test',
  tmp: '/tmp',
  cache: 'cache/_cacache',
  prefix: '/path/to/npm/cli',
  globalPrefix: '/usr/local',
  localPrefix: '/path/to/npm/cli',
  global: 'global',
  metricsRegistry: 'metrics-registry',
  sendMetrics: 'send-metrics',
  registry: 'registry',
  scope: '@npmcli',
  access: 'access',
  alwaysAuth: 'always-auth',
  audit: 'audit',
  auditLevel: 'audit-level',
  authType: 'auth-type',
  before: 'before',
  browser: 'browser',
  ca: 'ca',
  cafile: 'cafile',
  cert: 'cert',
  key: 'key',
  cacheLockRetries: 'cache-lock-retries',
  cacheLockStale: 'cache-lock-stale',
  cacheLockWait: 'cache-lock-wait',
  lockFile: {
    retries: 'cache-lock-retries',
    stale: 'cache-lock-stale',
    wait: 'cache-lock-wait'
  },
  cacheMax: 'cache-max',
  cacheMin: 'cache-min',
  cidr: 'cidr',
  readOnly: 'read-only',
  preid: 'preid',
  tagVersionPrefix: 'tag-version-prefix',
  allowSameVersion: 'allow-same-version',
  message: 'message',
  commitHooks: 'commit-hooks',
  gitTagVersion: 'git-tag-version',
  signGitCommit: 'sign-git-commit',
  signGitTag: 'sign-git-tag',
  depth: 'depth',
  description: 'description',
  searchexclude: 'searchexclude',
  searchlimit: 'searchlimit',
  searchopts: 'searchopts',
  searchstaleness: 'searchstaleness',
  dryRun: 'dry-run',
  engineStrict: 'engine-strict',
  retry: {
    retries: 'fetch-retries',
    factor: 'fetch-retry-factor',
    maxTimeout: 'fetch-retry-maxtimeout',
    minTimeout: 'fetch-retry-mintimeout'
  },
  force: 'force',
  formatPackageLock: 'format-package-lock',
  fund: 'fund',
  git: 'git',
  npmBin: '/path/to/npm/bin.js',
  nodeBin: '/path/to/some/node',
  viewer: 'viewer',
  editor: 'editor',
  binLinks: 'bin-links',
  rebuildBundle: 'rebuild-bundle',
  packageLock: 'package-lock',
  packageLockOnly: 'package-lock-only',
  globalStyle: 'global-style',
  legacyBundling: 'legacy-bundling',
  omit: [],
  save: 'save',
  saveBundle: 'save-bundle',
  saveDev: 'save-dev',
  saveOptional: 'save-optional',
  savePeer: 'save-peer',
  saveProd: 'save-prod',
  saveExact: 'save-exact',
  savePrefix: 'save-prefix',
  otp: 'otp',
  offline: 'offline',
  preferOffline: 'prefer-offline',
  preferOnline: 'prefer-online',
  strictSSL: 'strict-ssl',
  defaultTag: 'tag',
  tag: 'tag',
  userAgent: 'user-agent',
  '@scope:registry': '@scope:registry',
  '//nerf.dart:_authToken': '//nerf.dart:_authToken'
}
`
